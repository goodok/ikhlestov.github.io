{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"pas",
				"parse_markup\tfunction"
			],
			[
				"y_",
				"y_scores\tparam"
			],
			[
				"cla",
				"class_name\tstatement"
			],
			[
				"idx",
				"idx_to_class\tstatement"
			],
			[
				"mode",
				"model_name\tstatement"
			],
			[
				"val",
				"val_csv"
			],
			[
				"init",
				"init_df\tstatement"
			],
			[
				"lab",
				"label"
			],
			[
				"train",
				"train_df\tstatement"
			],
			[
				"labe",
				"labels_data\tstatement"
			],
			[
				"sho",
				"should_parse\tstatement"
			],
			[
				"rev",
				"revision\tparam"
			],
			[
				"din",
				"ding_json_path\tparam"
			],
			[
				"req",
				"req_rev\tstatement"
			],
			[
				"parse",
				"parse_markup\tfunction"
			],
			[
				"sw",
				"switch_to_required_revision\tfunction"
			],
			[
				"prec",
				"prec_idx\tforstmt"
			],
			[
				"def",
				"def_precision\tparam"
			],
			[
				"pred",
				"pred_array\tforstmt"
			],
			[
				"sta",
				"stats\tstatement"
			],
			[
				"wri",
				"writerow\tfunction"
			],
			[
				"res",
				"res_dict"
			],
			[
				"model",
				"model_name\tstatement"
			],
			[
				"gt",
				"gts\tstatement"
			],
			[
				"path",
				"path_to_save_gt_labels\tparam"
			],
			[
				"opti",
				"optimizer\tstatement"
			],
			[
				"co",
				"continue\tkeyword"
			],
			[
				"y_tr",
				"y_true_all"
			],
			[
				"File",
				"FileNotFoundError\tclass"
			],
			[
				"ave",
				"average_precision_score"
			],
			[
				"video",
				"video_part\tstatement"
			],
			[
				"with",
				"without_peoples\tstatement"
			],
			[
				"hal",
				"half_df_by_doorbots\tfunction"
			],
			[
				"doo",
				"doorbot_id"
			],
			[
				"trainer",
				"trainer_wrapper\tfunction"
			],
			[
				"get",
				"get_batch_size\tfunction"
			],
			[
				"part",
				"part_train_set_name\tstatement"
			],
			[
				"tra",
				"train_df\tstatement"
			],
			[
				"ini",
				"initial_train_csv"
			],
			[
				"data",
				"dataset"
			],
			[
				"csv",
				"csv_cleared_path"
			],
			[
				"im",
				"image_exist\tfunction"
			],
			[
				"vali",
				"validate_image\tfunction"
			],
			[
				"cs",
				"csv_cleared_path2"
			],
			[
				"cl",
				"clear_data\tfunction"
			],
			[
				"inde",
				"indexes_to_remove\tstatement"
			],
			[
				"ma",
				"markup_parser\tmodule"
			],
			[
				"SCV",
				"SVNClient\tclass"
			],
			[
				"time",
				"timedelta\tclass"
			],
			[
				"num",
				"num_epochs\tparam"
			],
			[
				"ima",
				"image_validator\tmodule"
			],
			[
				"fin",
				"find_packages\tstatement"
			],
			[
				"fil",
				"file_name\tstatement"
			],
			[
				"inpu",
				"input_\tstatement"
			],
			[
				"bath",
				"batch_size\tstatement"
			],
			[
				"tim",
				"time_for_batch\tstatement"
			],
			[
				"bat",
				"batch_size\tstatement"
			],
			[
				"batch",
				"batch_size"
			],
			[
				"ssd",
				"ssd_pred_array_min_conf\tstatement"
			],
			[
				"thre",
				"threshs\tstatement"
			],
			[
				"rec",
				"rec_level095\tstatement"
			],
			[
				"squ",
				"squeezenet_pred_array\tstatement"
			],
			[
				"ss_p",
				"ssd_pred_array\tstatement"
			],
			[
				"perso",
				"persons\tstatement"
			],
			[
				"ss",
				"ssd_true\tstatement"
			],
			[
				"dum",
				"dump\tfunction"
			],
			[
				"pre",
				"predictions\tstatement"
			],
			[
				"images",
				"images_dir\tstatement"
			],
			[
				"new",
				"new_path"
			],
			[
				"sh",
				"shape"
			],
			[
				"from",
				"from_dict\tfunction"
			],
			[
				"row",
				"row_dict\tstatement"
			],
			[
				"exi",
				"exist_ok\tparam"
			],
			[
				"per",
				"person_exist"
			],
			[
				"as",
				"asyncio\tmodule"
			],
			[
				"fail",
				"failed_to_convert_to_audio\tstatement"
			],
			[
				"tot",
				"total_handled_doorbots\tstatement"
			],
			[
				"AL",
				"ALGORITHM_MERGED_WITH_OPERATORS_JSON_FNAME\tinstance"
			],
			[
				"FAIL",
				"FAILED_TOCONVERT_TO_AUDIO_FNAME\tinstance"
			],
			[
				"load",
				"load_json\tfunction"
			],
			[
				"FAI",
				"FAILED_TO_DOWNLOAD_FROM_S3_FNAME\tinstance"
			],
			[
				"loa",
				"load_json\tfunction"
			],
			[
				"file",
				"filename\tparam"
			],
			[
				"stat",
				"stats_msg\tstatement"
			],
			[
				"sub",
				"sub_path\tstatement"
			],
			[
				"faile",
				"failed_to_conver_to_audio\tstatement"
			],
			[
				"is",
				"issubset\tfunction"
			],
			[
				"ass",
				"assertion\tfunction"
			],
			[
				"ex",
				"exist_ok\tparam"
			],
			[
				"save",
				"save_folder\tstatement"
			],
			[
				"dir",
				"directory\tstatement"
			],
			[
				"tod",
				"today\tstatement"
			],
			[
				"dat",
				"date"
			],
			[
				"da",
				"date"
			],
			[
				"Ar",
				"ArgumentParser\tclass"
			],
			[
				"doorob",
				"doorbot_id\tstatement"
			],
			[
				"ope",
				"operators_note\tstatement"
			],
			[
				"opre",
				"operators_note\tstatement"
			],
			[
				"operra",
				"operators_note"
			],
			[
				"algo",
				"ALGORITHM_RESULTS_JSON_FNAME\tstatement"
			],
			[
				"to_c",
				"to_csv\tfunction"
			],
			[
				"js",
				"json_f_path\tstatement"
			],
			[
				"json",
				"json_f_path\tstatement"
			],
			[
				"agg",
				"aggr_folder\tparam"
			],
			[
				"NO",
				"NotImplementedError\tclass"
			],
			[
				"jso",
				"json_datetime_format\tstatement"
			],
			[
				"al",
				"algorithm_results_list\tstatement"
			],
			[
				"upda",
				"update_and_create_results_filled\tstatement"
			],
			[
				"resul",
				"results_folder_aggregated"
			],
			[
				"resu",
				"result_folder_today"
			],
			[
				"upd",
				"update_and_create_results\tfunction"
			],
			[
				"up",
				"update_and_create_results\tfunction"
			],
			[
				"toda",
				"today_path\tstatement"
			],
			[
				"to",
				"today_folder\tparam"
			],
			[
				"folder",
				"folder_to_save\tparam"
			],
			[
				"alo",
				"algorithm_inp\tstatement"
			],
			[
				"op",
				"oper_res"
			],
			[
				"oper",
				"operators_inp"
			],
			[
				"iter",
				"iterrows\tfunction"
			],
			[
				"fina",
				"final_results"
			],
			[
				"par",
				"part_df_1\tstatement"
			],
			[
				"pad",
				"part_df_3\tstatement"
			],
			[
				"soun",
				"sound_exist_total"
			],
			[
				"algori",
				"algorithm_inp_f_name\tstatement"
			],
			[
				"remo",
				"removed_qtty"
			],
			[
				"ve",
				"videos_per_camera\tparam"
			],
			[
				"con",
				"converted_videos\tstatement"
			],
			[
				"results_a",
				"results_and_tmp_folder\tstatement"
			]
		]
	},
	"buffers":
	[
		{
			"file": "pages/index.rst",
			"settings":
			{
				"buffer_size": 1559,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "pages/python-related/numpy.rst",
			"settings":
			{
				"buffer_size": 835,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "pages/machine-learning/ml-bookmarks.rst",
			"settings":
			{
				"buffer_size": 7341,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "pages/math/math-notations.rst",
			"settings":
			{
				"buffer_size": 244,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "pages/python-related/testing.rst",
			"settings":
			{
				"buffer_size": 4973,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "requirements.txt",
			"settings":
			{
				"buffer_size": 15,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": ".gitignore",
			"settings":
			{
				"buffer_size": 169,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "pages/machine-learning/nn-models-compression-techniques.rst",
			"settings":
			{
				"buffer_size": 2981,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "pages/python-related/python-hints.rst",
			"settings":
			{
				"buffer_size": 14547,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "pages/machine-learning/models-architectures.rst",
			"settings":
			{
				"buffer_size": 4209,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
		[
			[
				[
					"Anaconda Python Builder",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 392.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"package control: insl\t",
				"Package Control: Install Package"
			]
		],
		"width": 521.0
	},
	"console":
	{
		"height": 126.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = 'df21e130d211cfc94d9b0905775a7c0f' + '1e3d39e33b79698005270310898eea76'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/illarionkhliestov/Projects/blog"
	],
	"file_history":
	[
		"/Users/illarionkhliestov/.envs/blog_env/bin/activate",
		"/Users/illarionkhliestov/Projects/blog/.venv/bin/activate",
		"/Users/illarionkhliestov/Projects/blog/pages/python-related/python-tips.rst",
		"/Users/illarionkhliestov/Projects/blog/notes/rst_notes.rst",
		"/Users/illarionkhliestov/Projects/blog/pages/math/math-background.rst",
		"/Users/illarionkhliestov/Projects/blog/pages/math/probability-theory/probability-models-and-axioms.rst",
		"/Users/illarionkhliestov/Projects/blog/pages/math/probability-theory/main-formulas.rst",
		"/Users/illarionkhliestov/Projects/blog/pages/python-related/python-libraries.rst",
		"/Users/illarionkhliestov/Projects/blog/pages/python-related/testing.rst",
		"/Users/illarionkhliestov/Projects/blog/pages/python-related/python-hints.rst",
		"/Users/illarionkhliestov/Downloads/выписки_3_квартал_хлестов/UAH.csv",
		"/Users/illarionkhliestov/Projects/blog/pages/math/probability-theory/index.rst",
		"/Users/illarionkhliestov/Projects/blog/pages/math/additional-notes.rst",
		"/Users/illarionkhliestov/Projects/blog/notes/notes.txt",
		"/Users/illarionkhliestov/Projects/blog/pages/machine-learning/tensorflow-hints.rst",
		"/Users/illarionkhliestov/Projects/blog/pages/machine-learning/ml-bookmarks.rst",
		"/Users/illarionkhliestov/Projects/blog/pages/ubuntu/makefiles.rst",
		"/Users/illarionkhliestov/PycharmProjects/faces_detection/Makefile",
		"/Users/illarionkhliestov/Projects/blog/pages/machine-learning/models-architectures.rst",
		"/Users/illarionkhliestov/Projects/blog/pages/machine-learning/architecture-decisions-flow.rst",
		"/Users/illarionkhliestov/Projects/blog/pages/machine-learning/convolutions-types.rst",
		"/Users/illarionkhliestov/Projects/blog/pages/machine-learning/pytorch-notes.rst",
		"/Users/illarionkhliestov/Projects/blog/pages/another-topics/git-notes.rst",
		"/Users/illarionkhliestov/Projects/blog/listings/git.sh",
		"/Users/illarionkhliestov/Projects/blog/pages/machine-learning/cs231n/index.rst",
		"/Users/illarionkhliestov/Projects/blog/pages/math/math-notations.rst",
		"/Users/illarionkhliestov/Projects/blog/listings/ubuntu-bash-hints.sh",
		"/Users/illarionkhliestov/Projects/blog/pages/ubuntu/bash-commands.rst",
		"/Users/illarionkhliestov/.bash_profile",
		"/Users/illarionkhliestov/PycharmProjects/faces_detection/object_detection/data/labels_file.pbtxt",
		"/Users/illarionkhliestov/.bashrc",
		"/Users/illarionkhliestov/Projects/blog/notes/rst_base.rst",
		"/Users/illarionkhliestov/Projects/blog/pages/machine-learning/architecture_vs_optimization_approaches.rst",
		"/Users/illarionkhliestov/.ssh/config",
		"/Users/illarionkhliestov/Projects/blog/pages/index.rst",
		"/Users/illarionkhliestov/PycharmProjects/nn_var_data_train/person.py",
		"/Users/illarionkhliestov/PycharmProjects/nn_var_data_train/trainer_neighborhood.py",
		"/Users/illarionkhliestov/PycharmProjects/ssd_squeeze_validation/model_service.py",
		"/Users/illarionkhliestov/PycharmProjects/squeeze_net_train/squeezenet_base.py",
		"/Users/illarionkhliestov/PycharmProjects/squeeze_net_train/train_multy_class.py",
		"/Users/illarionkhliestov/PycharmProjects/squeeze_net_train/precision_recall.py",
		"/Users/illarionkhliestov/PycharmProjects/suspicious-activity/SAEngine/MetadataAnalysis/README.md",
		"/Users/illarionkhliestov/PycharmProjects/squeeze_net_train/dataset.py",
		"/Users/illarionkhliestov/Projects/blog/listings/python-hints.py",
		"/Users/illarionkhliestov/.bash_history",
		"/private/tmp/test/text2",
		"/private/tmp/test/text1",
		"/private/tmp/test/sample_data",
		"/Users/illarionkhliestov/Library/Application Support/Sublime Text 3/Packages/OmniMarkupPreviewer/Default (OSX).sublime-keymap",
		"/Users/illarionkhliestov/Library/Application Support/Sublime Text 3/Packages/OmniMarkupPreviewer/OmniMarkupPreviewer.sublime-settings",
		"/Users/illarionkhliestov/Library/Application Support/Sublime Text 3/Packages/User/OmniMarkupPreviewer.sublime-settings",
		"/Users/illarionkhliestov/Library/Application Support/Sublime Text 3/Packages/User/Default (OSX).sublime-keymap",
		"/private/tmp/req",
		"/Users/illarionkhliestov/Projects/blog/pages/ubuntu/bash-shortcuts.rst",
		"/Users/illarionkhliestov/PycharmProjects/ringlabs-common/setup.py",
		"/Users/illarionkhliestov/PycharmProjects/ssd_squeeze_validation/model_service_multy.py",
		"/Users/illarionkhliestov/PycharmProjects/ssd_squeeze_validation/make_predictions.py",
		"/Users/illarionkhliestov/Library/Application Support/Sublime Text 3/Packages/Anaconda/Default (OSX).sublime-keymap",
		"/Users/illarionkhliestov/PycharmProjects/ringlabs-common/ringlabs-common.sublime-project",
		"/Users/illarionkhliestov/Library/Application Support/Sublime Text 3/Packages/User/Anaconda.sublime-settings",
		"/Users/illarionkhliestov/PycharmProjects/ringlabs-common/data_handler/downloader.py",
		"/Users/illarionkhliestov/PycharmProjects/ssd_squeeze_validation/plot_results.py",
		"/Users/illarionkhliestov/PycharmProjects/ringlabs-common/data_handler/main.py",
		"/Users/illarionkhliestov/PycharmProjects/squeeze_net_train/prepare_data.py",
		"/Users/illarionkhliestov/.bash_aliases",
		"/Users/illarionkhliestov/PycharmProjects/nn_var_data_train/visualize_results.py",
		"/Users/illarionkhliestov/PycharmProjects/ssd_squeeze_validation/model_service_multy_class.py",
		"/Users/illarionkhliestov/PycharmProjects/nn_var_data_train/trainer.py",
		"/Users/illarionkhliestov/PycharmProjects/nn_var_data_train/precision_recall.py",
		"/Users/illarionkhliestov/PycharmProjects/nn_var_data_train/logger.py",
		"/Users/illarionkhliestov/PycharmProjects/squeeze_net_train/logger.py",
		"/Users/illarionkhliestov/PycharmProjects/nn_var_data_train/squeezenet_base.py",
		"/private/tmp/svn_data/997981/1000731327.json",
		"/private/tmp/svn_data/1035056/1966175827.json",
		"/Users/illarionkhliestov/PycharmProjects/ringlabs-common/data_handler/svn_client.py",
		"/Users/illarionkhliestov/PycharmProjects/ringlabs-common/data_handler/tests/test_markupParser.py",
		"/Users/illarionkhliestov/PycharmProjects/ringlabs-common/data_handler/markup_parser.py",
		"/Users/illarionkhliestov/Projects/blog/listings/pandas.py",
		"/Users/illarionkhliestov/PycharmProjects/nn_var_data_train/display_statistics.py",
		"/Users/illarionkhliestov/PycharmProjects/nn_var_data_train/trainer_muly_class.py",
		"/Users/illarionkhliestov/PycharmProjects/algorithmsEvaluation/evaluation.py",
		"/Users/illarionkhliestov/PycharmProjects/algorithmsEvaluation/eval_datasets.py",
		"/Users/illarionkhliestov/PycharmProjects/algorithmsEvaluation/visualization.py",
		"/Users/illarionkhliestov/PycharmProjects/SSD-Ring/train.py",
		"/Users/illarionkhliestov/PycharmProjects/SSD-Ring/demo.py",
		"/Users/illarionkhliestov/PycharmProjects/SSD-Ring/evaluate_ring.py",
		"/Users/illarionkhliestov/PycharmProjects/ssd_squeeze_validation/convert_csv_to_mxnet_type.py",
		"/Users/illarionkhliestov/Projects/blog/pages/machine-learning/quck_ref.rst",
		"/Users/illarionkhliestov/PycharmProjects/ring-location-search/models/models/evaluate/model_evaluation.py",
		"/Users/illarionkhliestov/PycharmProjects/ringlabs-common/data_handler/image_validator.py",
		"/Users/illarionkhliestov/PycharmProjects/ringlabs-common/data_handler/filter.py",
		"/Users/illarionkhliestov/PycharmProjects/ssd_squeeze_validation/plot_speed_compare.py",
		"/private/tmp/some/some.py",
		"/Users/illarionkhliestov/PycharmProjects/nn_var_data_train/diaplay_statistics.py",
		"/Users/illarionkhliestov/PycharmProjects/ringlabs-common/README.rst",
		"/Users/illarionkhliestov/Projects/aiohttp/aiohttp/streams.py",
		"/Users/illarionkhliestov/Projects/aiohttp/aiohttp/client.py",
		"/Users/illarionkhliestov/Projects/aiohttp/Makefile",
		"/Users/illarionkhliestov/Projects/aiohttp_issue/client.py",
		"/Users/illarionkhliestov/Projects/aiohttp_issue/debug_steps",
		"/Users/illarionkhliestov/Projects/aiohttp/aiohttp/multipart.py",
		"/Users/illarionkhliestov/Projects/aiohttp/aiohttp/client_reqrep.py",
		"/Users/illarionkhliestov/Projects/aiohttp/requirements-dev.txt",
		"/Users/illarionkhliestov/Projects/aiohttp/requirements-ci.txt",
		"/Users/illarionkhliestov/PycharmProjects/nn_var_data_train/tutorial/simple_net2.py",
		"/private/tmp/learning_path",
		"/private/tmp/code_review",
		"/Users/illarionkhliestov/PycharmProjects/sounds_check/checker/main.py",
		"/Users/illarionkhliestov/PycharmProjects/sounds_check/checker/database_client.py",
		"/Users/illarionkhliestov/PycharmProjects/nn_var_data_train/trainer2.py",
		"/Users/illarionkhliestov/PycharmProjects/SSD-Ring/dataset/iterator.py",
		"/Users/illarionkhliestov/PycharmProjects/nn_var_data_train/tutorial/simple_net.py",
		"/Users/illarionkhliestov/PycharmProjects/ringlabs-common/some.py",
		"/Users/illarionkhliestov/PycharmProjects/ringlabs-common/data_handler/requirements.txt",
		"/Users/illarionkhliestov/PycharmProjects/ringlabs-common/requirements2.txt",
		"/Users/illarionkhliestov/PycharmProjects/ringlabs-common/data_handler/requirements2.txt",
		"/Users/illarionkhliestov/PycharmProjects/ringlabs-common/data_handler/loggers.py",
		"/Users/illarionkhliestov/PycharmProjects/ringlabs-common/data_handler/main_test.py",
		"/Users/illarionkhliestov/PycharmProjects/ringlabs-common/data_handler/cleaner.py",
		"/Users/illarionkhliestov/PycharmProjects/nn_var_data_train/transforms.py",
		"/Users/illarionkhliestov/PycharmProjects/ring-location-search/models/models/datasets/person.py",
		"/Users/illarionkhliestov/PycharmProjects/SSD-Ring/detect/detector.py",
		"/Users/illarionkhliestov/PycharmProjects/SSD-Ring/evaluate/helpers.py",
		"/Users/illarionkhliestov/PycharmProjects/SSD-Ring/evaluate/ring_evaluation.py",
		"/Users/illarionkhliestov/Documents/docker_runs",
		"/Users/illarionkhliestov/PycharmProjects/data_handling/downloader.py",
		"/Users/illarionkhliestov/PycharmProjects/evaluations/parse_new_markup.py",
		"/Users/illarionkhliestov/PycharmProjects/evaluations/download_required_frames.py"
	],
	"find":
	{
		"height": 39.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"faces_service.continuous_processing.protocol",
			"geq",
			"theta",
			"inf",
			"figure",
			"- :",
			"loss",
			"regularization",
			"violate",
			">>>",
			"    >>>",
			">>>",
			"ls",
			"sigmoid",
			"Squeezenet",
			"_get_model_state_dict_path",
			"awk",
			"stdout",
			"stdin",
			"create_model_service",
			"anaconda_run_current_file_tests",
			"anaconda_find_usages",
			"create_model_service",
			"person",
			"retry_urls",
			"url",
			"data_handler",
			"markup_parser",
			"squeeze_net_preds_multy_class",
			"person_threshold",
			"res_f_name",
			"y_true",
			"y_true_part",
			"class_name",
			"train_df",
			"preds",
			"val_prediction",
			"available_models",
			"preds",
			"train_df",
			"10",
			"pirnt",
			"init_df",
			"values",
			"selected_dings",
			"data",
			"df",
			", ",
			"Dataset",
			"data",
			"set_device",
			"preds",
			"train_set",
			"train_df",
			"test_csv_path",
			"num_classes",
			"get_train_val_data",
			"person",
			"labels_one_hot",
			"int",
			"target",
			"MultyLabelsClassification",
			"logger",
			"Squeezenet",
			"something_wrong",
			"rev",
			"req_rev",
			"labels_one_hot",
			"In[",
			"in",
			"In",
			"csv_path",
			"idx",
			"recall",
			"prec",
			"model_names_for_table",
			"prec_rec_table",
			"title",
			"label",
			"min_threshold",
			"def_precision",
			"y_scores",
			"y_true",
			"AP",
			"sub_results",
			"‘",
			"’",
			"persons_perc",
			".csv",
			" ",
			"f_name",
			"avail_csvs",
			"f_name",
			"last_name",
			"first_name",
			"csvfile",
			"tarin_set",
			"\"\"\"",
			"read(sel",
			"CONTENT_ENCODING",
			"content-en",
			"content-enc",
			"aiodns",
			"all_data_half_dorbots",
			"model_name",
			"model_sub_name",
			"model_pred",
			"model_name",
			"path_to_save_gt_labels",
			"val_loader",
			"val_labels",
			"tqd",
			"optimizer",
			"val_loader",
			"criterion",
			"save_gts_labels",
			"average_precision",
			"y_true_all",
			"data_path",
			"10th_frame_per_video_half_doorbots",
			"train_set",
			"doorbot_id",
			"re_upload",
			"exis",
			"data",
			"validate_image",
			"downloader",
			"clear_data"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 4,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "pages/index.rst",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1559,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"git_gutter_is_enabled": true,
							"markdonw_live_preview_last_run": 1524225982.95,
							"spell_check": false,
							"syntax": "Packages/RestructuredText/reStructuredText.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "pages/python-related/numpy.rst",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 835,
						"regions":
						{
						},
						"selection":
						[
							[
								386,
								386
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content"
							],
							"git_gutter_is_enabled": true,
							"markdonw_live_preview_last_run": 1524225982.96,
							"syntax": "Packages/RestructuredText/reStructuredText.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "pages/machine-learning/ml-bookmarks.rst",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7341,
						"regions":
						{
						},
						"selection":
						[
							[
								5103,
								5103
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content"
							],
							"git_gutter_is_enabled": true,
							"markdonw_live_preview_last_run": 1524225982.96,
							"spell_check": true,
							"syntax": "Packages/RestructuredText/reStructuredText.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 59.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "pages/math/math-notations.rst",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 244,
						"regions":
						{
						},
						"selection":
						[
							[
								201,
								201
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content"
							],
							"git_gutter_is_enabled": true,
							"markdonw_live_preview_last_run": 1524225982.96,
							"spell_check": true,
							"syntax": "Packages/RestructuredText/reStructuredText.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "pages/python-related/testing.rst",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4973,
						"regions":
						{
						},
						"selection":
						[
							[
								3524,
								3524
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content"
							],
							"git_gutter_is_enabled": true,
							"markdonw_live_preview_last_run": 1524225982.95,
							"syntax": "Packages/RestructuredText/reStructuredText.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1924.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "requirements.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 15,
						"regions":
						{
						},
						"selection":
						[
							[
								15,
								15
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content"
							],
							"git_gutter_is_enabled": true,
							"markdonw_live_preview_last_run": 1524225982.95,
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": ".gitignore",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 169,
						"regions":
						{
						},
						"selection":
						[
							[
								168,
								168
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content"
							],
							"git_gutter_is_enabled": true,
							"markdonw_live_preview_last_run": 1524225982.96,
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "pages/machine-learning/nn-models-compression-techniques.rst",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2981,
						"regions":
						{
						},
						"selection":
						[
							[
								2981,
								2981
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"git_gutter_is_enabled": true,
							"markdonw_live_preview_last_run": 1524225982.96,
							"spell_check": true,
							"syntax": "Packages/RestructuredText/reStructuredText.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "pages/python-related/python-hints.rst",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 14547,
						"regions":
						{
						},
						"selection":
						[
							[
								14366,
								14366
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										14376,
										14377
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"region.yellowish"
									]
								},
								"open":
								{
									"1":
									[
										14354,
										14355
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"git_gutter_is_enabled": true,
							"markdonw_live_preview_last_run": 1524225982.96,
							"syntax": "Packages/RestructuredText/reStructuredText.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 10026.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "pages/machine-learning/models-architectures.rst",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4209,
						"regions":
						{
						},
						"selection":
						[
							[
								360,
								420
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content"
							],
							"git_gutter_is_enabled": true,
							"markdonw_live_preview_last_run": 1524225982.96,
							"syntax": "Packages/RestructuredText/reStructuredText.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 38.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 94.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "blog.sublime-project",
	"replace":
	{
		"height": 46.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/Projects/blog/blog.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": false,
	"side_bar_width": 150.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
